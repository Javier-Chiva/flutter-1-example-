 import 'dart:html';
import 'dart:collection';
 

class Rosco {
  ListQueue<Pregunta> roscoPreguntas = ListQueue<Pregunta>();
  List<String> respondidas = [];

  Rosco() {
    roscoPreguntas.addAll(RoscoApi().obtenerRosco());
  }

Pregunta obtenerPregunta(bool inicial) {
  if (inicial) return roscoPreguntas.first;
  
  var siguientePregunta = roscoPreguntas.firstWhere(
    (rosco) => !respondidas.any((x) => x == rosco.letra),
    orElse: () => null as Pregunta, // Utiliza 'null' como valor nulo con el tipo Pregunta
  );
  
  return siguientePregunta;
}

   

  Pregunta pasapalabra() {
    return Pregunta("", "", "");
  }

  String evaluarRespuesta(String? letra, String? respuesta) {
    var pregunta = roscoPreguntas
        .firstWhere((rosco) => rosco.letra == letra );
    
    respondidas.add(pregunta.letra);
    
      print(respondidas);

    return pregunta.respuesta == respuesta ? "Letra $letra respuesta correcta" : "Letra $letra respuesta incorrecta";
   
   
  }
}
 

class Pregunta {
  String letra;
  String definicion;
  String respuesta;

  Pregunta(this.letra, this.definicion, this.respuesta);
}

class Db {
  static List letras = const ["A", "B", "C", "D", "E", "F"];
  static List definiciones = const [
    "Persona que tripula una Astronave o que está entrenada para este Trabajo",
    "Especie de Talega o Saco de Tela y otro material que sirve para llevar o guardar algo",
    "Aparato destinado a registrar imágenes animadas para el cine o la televisión",
    "Obra literaria escrita para ser representada",
    "Que se prolonga muchísimo o excesivamente",
    "Laboratorio y despacho del farmacéutico"
  ];
  static List respuestas = [
    "Astronauta",
    "Bolsa",
    "Cámara",
    "Drama",
    "Eterno",
    "Farmacia"
  ];
}

class RoscoApi {
  List<Pregunta> roscoPreguntas = [];

  List<Pregunta> obtenerRosco() {
    for (var letra in Db.letras) {
      var index = Db.letras.indexOf(letra);
      var roscoPregunta =
          Pregunta(letra, Db.definiciones[index], Db.respuestas[index]);
      roscoPreguntas.add(roscoPregunta);
    }
    return roscoPreguntas;
  }
}


void main() {
  var rosco = Rosco();
  var primeraDefinicion = rosco.obtenerPregunta(true);

  var preguntaElement = querySelector("#pregunta");
  if (preguntaElement != null) {
    preguntaElement.text = primeraDefinicion.definicion;
  }

  var preguntaLetra = querySelector("#letra");
  if (preguntaLetra != null) {
    preguntaLetra.text = primeraDefinicion.letra;
  }

  querySelector("#btnEnviar")?.onClick?.listen((event) {
    var respuesta = (querySelector("#textRespuesta") as InputElement?)?.value;
    var letra = querySelector("#letra")?.text;

    if (respuesta != null && letra != null) {
      // Aquí puedes colocar la lógica para usar las variables 'respuesta' y 'letra'.
      print("Respuesta: $respuesta, Letra: $letra");
    }

    String mensaje = rosco.evaluarRespuesta(letra, respuesta);
    
    var nuevaPregunta = rosco.obtenerPregunta(false);
    
    actualizarUI(nuevaPregunta);
     
    print(mensaje);
  });
}

void actualizarUI(Pregunta pregunta){
  querySelector("#letra")?.text = pregunta.letra;
  querySelector("#pregunta")?.text = pregunta.definicion;
  querySelector("#textRespuesta")?.text = "";
  }
